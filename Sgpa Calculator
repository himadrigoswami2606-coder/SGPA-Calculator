<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>SGPA Calculator</title>
<style>
    * {
        box-sizing: border-box;
        font-family: "Poppins", sans-serif;
    }
    body {
        background: radial-gradient(circle at top, #0a0a0f, #000);
        color: #fff;
        min-height: 100vh;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 20px;
    }
    .container {
        background: rgba(20, 20, 30, 0.6);
        backdrop-filter: blur(10px);
        border-radius: 20px;
        padding: 30px;
        width: 100%;
        max-width: 650px;
        box-shadow: 0 0 25px rgba(0, 0, 0, 0.8);
    }
    h1 {
        text-align: center;
        margin-bottom: 20px;
        font-size: 28px;
        color: #00eaff;
        letter-spacing: 1px;
    }
    h2 {
        margin-top: 20px;
        color: #89f7fe;
        font-size: 20px;
    }
    label {
        display: block;
        margin-top: 10px;
        font-size: 14px;
    }
    input {
        width: 100%;
        padding: 10px;
        border: none;
        outline: none;
        border-radius: 8px;
        margin-top: 5px;
        background: rgba(255, 255, 255, 0.1);
        color: white;
    }
    button {
        margin-top: 15px;
        padding: 10px 20px;
        border: none;
        border-radius: 10px;
        background: linear-gradient(90deg, #00eaff, #0077ff);
        color: #fff;
        font-weight: bold;
        cursor: pointer;
        transition: 0.3s;
    }
    button:hover {
        opacity: 0.9;
        transform: scale(1.03);
    }
    .subject-box {
        margin-bottom: 15px;
        padding: 15px;
        border: 1px solid rgba(255,255,255,0.1);
        border-radius: 10px;
        background: rgba(255,255,255,0.05);
    }
    .result {
        margin-top: 25px;
        text-align: center;
        font-size: 20px;
        color: #00ffcc;
    }
</style>
</head>
<body>
<div class="container">
    <h1>SGPA Calculator</h1>

    <h2>Theory Subjects</h2>
    <div id="theory-section"></div>
    <button onclick="addSubject('theory')">+ Add Theory Subject</button>

    <h2>Practical Subjects</h2>
    <div id="practical-section"></div>
    <button onclick="addSubject('practical')">+ Add Practical Subject</button>

    <button onclick="calculateSGPA()">Calculate SGPA</button>

    <div id="result" class="result"></div>
</div>

<script>
function getGradePoint(total) {
    if (total >= 90) return 10;
    else if (total >= 80) return 9;
    else if (total >= 70) return 8;
    else if (total >= 60) return 7;
    else if (total >= 50) return 6;
    else if (total >= 40) return 5;
    else return 0;
}

function addSubject(type) {
    const container = document.getElementById(type + '-section');
    const box = document.createElement('div');
    box.className = 'subject-box';
    box.innerHTML = `
        <label>Subject Name:</label>
        <input type="text" placeholder="Enter subject name">
        <label>Credits:</label>
        <input type="number" step="0.5" min="0.5" placeholder="Enter credits">
        ${type === 'theory' ? `
        <label>Mid Sem Marks (out of 30):</label>
        <input type="number" min="0" max="30" placeholder="Enter marks">
        <label>End Sem Marks (out of 70):</label>
        <input type="number" min="0" max="70" placeholder="Enter marks">
        ` : `
        <label>Total Marks (out of 100):</label>
        <input type="number" min="0" max="100" placeholder="Enter marks">`}
    `;
    container.appendChild(box);
}

function calculateSGPA() {
    let totalPoints = 0, totalCredits = 0;
    let hasValidSubjects = false;
    
    // Validate and calculate for theory subjects
    document.querySelectorAll('#theory-section .subject-box').forEach(box => {
        const inputs = box.querySelectorAll('input');
        const name = inputs[0].value.trim();
        const credit = parseFloat(inputs[1].value);
        const mid = parseInt(inputs[2].value);
        const end = parseInt(inputs[3].value);
        
        if (isNaN(credit) || credit <= 0) {
            alert(`Invalid credits for theory subject "${name}". Credits must be a positive number.`);
            return;
        }
        if (isNaN(mid) || mid < 0 || mid > 30) {
            alert(`Invalid mid-sem marks for theory subject "${name}". Marks must be between 0 and 30.`);
            return;
        }
        if (isNaN(end) || end < 0 || end > 70) {
            alert(`Invalid end-sem marks for theory subject "${name}". Marks must be between 0 and 70.`);
            return;
        }
        
        const total = mid + end;
        const gp = getGradePoint(total);
        totalPoints += gp * credit;
        totalCredits += credit;
        hasValidSubjects = true;
    });

    // Validate and calculate for practical subjects
    document.querySelectorAll('#practical-section .subject-box').forEach(box => {
        const inputs = box.querySelectorAll('input');
        const name = inputs[0].value.trim();
        const credit = parseFloat(inputs[1].value);
        const total = parseInt(inputs[2].value);
        
        if (isNaN(credit) || credit <= 0) {
            alert(`Invalid credits for practical subject "${name}". Credits must be a positive number.`);
            return;
        }
        if (isNaN(total) || total < 0 || total > 100) {
            alert(`Invalid total marks for practical subject "${name}". Marks must be between 0 and 100.`);
            return;
        }
        
        const gp = getGradePoint(total);
        totalPoints += gp * credit;
        totalCredits += credit;
        hasValidSubjects = true;
    });

    if (!hasValidSubjects) {
        document.getElementById('result').innerHTML = "Please add valid subjects to calculate SGPA.";
        return;
    }

    const sgpa = (totalPoints / totalCredits).toFixed(2);
    document.getElementById('result').innerHTML = `<strong>Your SGPA = ${sgpa}</strong>`;
}
</script>
</body>
</html>
